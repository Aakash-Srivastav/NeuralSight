# # services:
# #   backend:
# #     build:
# #       context: .
# #       dockerfile: backend/Dockerfile
# #     ports:
# #       - "5000:5000"
# #     volumes:
# #       - ./backend:/app
# #       - ./models:/app/models
# #     env_file:
# #       - ./backend/.env

# #   frontend:
# #     build: ./frontend
# #     ports:
# #       - "3000:3000"
# #     volumes:
# #       - ./frontend:/app
# #     depends_on:
# #       - backend

# services:
#   backend:
#     build:
#       context: .
#       dockerfile: backend/Dockerfile
#     ports:
#       - "5000:5000"
#     volumes:
#       - ./backend:/app
#       - ./models:/app/models
#     env_file:
#       - ./backend/.env
#     depends_on:
#       - db

#   db:
#     image: postgres:15
#     restart: always
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: Srivastav
#       POSTGRES_DB: disease_prediction
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

#   frontend:
#     build: ./frontend
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./frontend:/app
#     depends_on:
#       - backend

# volumes:
#   postgres_data:

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      # - ./models:/app/models
    env_file:
      - ./backend/.env
    depends_on:
      - db

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Srivastav
      POSTGRES_DB: disease_prediction
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend

volumes:
  postgres_data:
